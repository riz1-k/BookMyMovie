{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Riz\\\\source\\\\repos\\\\BookMyMovie_Reactjs\\\\BookMyMovie_Reactjs\\\\ClientApp\\\\src\\\\Models\\\\EditMovModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Form, Image } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditMovModal(props) {\n  _s();\n\n  const [cats, setCats] = useState([]);\n  const [photofilename, setPhotofilename] = useState('anonymous.png');\n  const {\n    movid,\n    movname,\n    category,\n    rating,\n    releasedate,\n    summary,\n    onHide\n  } = props;\n  useEffect(() => {\n    fetch(process.env.REACT_APP_API + 'categories').then(response => response.json()).then(data => {\n      setCats(data);\n    });\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(process.env.REACT_APP_API + 'movies', {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        MovieId: event.target.MovieId.value,\n        MovieName: event.target.MovieName.value,\n        Category: event.target.Category.value,\n        PosterFileName: photofilename,\n        Rating: event.target.Rating.value,\n        ReleaseDate: event.target.ReleaseDate.value,\n        Summary: event.target.Summary.value\n      })\n    }).then(res => res.json()).then(result => {\n      alert(result);\n    }, error => {\n      alert('Failed');\n    });\n  };\n\n  const handleFileSelected = event => {\n    event.preventDefault();\n    setPhotofilename(event.target.files[0].name);\n    const formData = new FormData();\n    formData.append('myFile', event.target.files[0], event.target.files[0].name);\n    fetch(process.env.REACT_APP_API + 'Movies/SaveFile', {\n      method: 'POST',\n      body: formData\n    }).then(res => res.json()).then(result => {}, error => {\n      alert('Failed');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Modal, { ...props,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        clooseButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"Edit Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"MovieId\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Movie Id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"MovieId\",\n                  required: true,\n                  disabled: true,\n                  defaultValue: movid,\n                  placeholder: \"Movie Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"MovieName\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Movie Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"MovieName\",\n                  required: true,\n                  placeholder: \"Movie Name\",\n                  defaultValue: movname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"Category\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  defaultValue: category,\n                  children: cats.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: cat.CategoryName\n                  }, cat.CategoryId, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 45\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"Rating\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  name: \"Rating\",\n                  required: true,\n                  placeholder: \"Rating\",\n                  defaultValue: rating\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"ReleaseDate\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Release Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  name: \"DateOfJoining\",\n                  required: true,\n                  placeholder: \"DateOfJoining\",\n                  defaultValue: releasedate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"Summary\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Summary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"Summary\",\n                  required: true,\n                  placeholder: \"Summary\",\n                  defaultValue: summary\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  type: \"submit\",\n                  children: \"Update Movie\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              width: \"200px\",\n              height: \"200px\",\n              src: process.env.REACT_APP_PHOTOPATH + photofilename,\n              defaultValue: photofilename\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleFileSelected,\n              type: \"File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: onHide,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditMovModal, \"8w+yozcYhLxVmlvUvMAeS6kZd1k=\");\n\n_c = EditMovModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMovModal\");","map":{"version":3,"sources":["C:/Users/Riz/source/repos/BookMyMovie_Reactjs/BookMyMovie_Reactjs/ClientApp/src/Models/EditMovModal.js"],"names":["React","useEffect","useState","Modal","Button","Row","Col","Form","Image","EditMovModal","props","cats","setCats","photofilename","setPhotofilename","movid","movname","category","rating","releasedate","summary","onHide","fetch","process","env","REACT_APP_API","then","response","json","data","handleSubmit","event","preventDefault","method","headers","Accept","body","JSON","stringify","MovieId","target","value","MovieName","Category","PosterFileName","Rating","ReleaseDate","Summary","res","result","alert","error","handleFileSelected","files","name","formData","FormData","append","map","cat","CategoryName","CategoryId","REACT_APP_PHOTOPATH"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Modal, Button, Row, Col, Form, Image } from 'react-bootstrap';\r\n\r\nexport default function EditMovModal(props) {\r\n    const [cats, setCats] = useState([]);\r\n    const [photofilename, setPhotofilename] = useState('anonymous.png');\r\n    const { movid, movname, category, rating, releasedate, summary, onHide } =\r\n        props;\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API + 'categories')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setCats(data);\r\n            });\r\n    }, []);\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        fetch(process.env.REACT_APP_API + 'movies', {\r\n            method: 'PUT',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                MovieId: event.target.MovieId.value,\r\n                MovieName: event.target.MovieName.value,\r\n                Category: event.target.Category.value,\r\n                PosterFileName: photofilename,\r\n                Rating: event.target.Rating.value,\r\n                ReleaseDate: event.target.ReleaseDate.value,\r\n                Summary: event.target.Summary.value,\r\n            }),\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                result => {\r\n                    alert(result);\r\n                },\r\n                error => {\r\n                    alert('Failed');\r\n                }\r\n            );\r\n    };\r\n    const handleFileSelected = event => {\r\n        event.preventDefault();\r\n        setPhotofilename(event.target.files[0].name);\r\n        const formData = new FormData();\r\n        formData.append(\r\n            'myFile',\r\n            event.target.files[0],\r\n            event.target.files[0].name\r\n        );\r\n\r\n        fetch(process.env.REACT_APP_API + 'Movies/SaveFile', {\r\n            method: 'POST',\r\n            body: formData,\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                result => { },\r\n                error => {\r\n                    alert('Failed');\r\n                }\r\n            );\r\n    };\r\n\r\n    return (\r\n        <div className='container'>\r\n            <Modal\r\n                {...props}\r\n                size='lg'\r\n                aria-labelledby='contained-modal-title-vcenter'\r\n                centered\r\n            >\r\n                <Modal.Header clooseButton>\r\n                    <Modal.Title id='contained-modal-title-vcenter'>\r\n                        Edit Movie\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row>\r\n                        <Col sm={6}>\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group controlId='MovieId'>\r\n                                    <Form.Label>Movie Id</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        name='MovieId'\r\n                                        required\r\n                                        disabled\r\n                                        defaultValue={movid}\r\n                                        placeholder='Movie Name'\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId='MovieName'>\r\n                                    <Form.Label>Movie Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        name='MovieName'\r\n                                        required\r\n                                        placeholder='Movie Name'\r\n                                        defaultValue={movname}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Category'>\r\n                                    <Form.Label>Category</Form.Label>\r\n                                    <Form.Control as='select' defaultValue={category}>\r\n                                        {cats.map(cat => (\r\n                                            <option key={cat.CategoryId}>{cat.CategoryName}</option>\r\n                                        ))}\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Rating'>\r\n                                    <Form.Label>Rating</Form.Label>\r\n                                    <Form.Control\r\n                                        type='number'\r\n                                        name='Rating'\r\n                                        required\r\n                                        placeholder='Rating'\r\n                                        defaultValue={rating}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId='ReleaseDate'>\r\n                                    <Form.Label>Release Date</Form.Label>\r\n                                    <Form.Control\r\n                                        type='date'\r\n                                        name='DateOfJoining'\r\n                                        required\r\n                                        placeholder='DateOfJoining'\r\n                                        defaultValue={releasedate}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Summary'>\r\n                                    <Form.Label>Summary</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        name='Summary'\r\n                                        required\r\n                                        placeholder='Summary'\r\n                                        defaultValue={summary}\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group>\r\n                                    <Button variant='primary' type='submit'>\r\n                                        Update Movie\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n\r\n                        <Col sm={6}>\r\n                            <Image\r\n                                width='200px'\r\n                                height='200px'\r\n                                src={process.env.REACT_APP_PHOTOPATH + photofilename}\r\n                                defaultValue={photofilename}\r\n                            />\r\n                            <input onChange={handleFileSelected} type='File' />\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant='danger' onClick={onHide}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}