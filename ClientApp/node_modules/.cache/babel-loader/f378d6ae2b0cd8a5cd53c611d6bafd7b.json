{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Riz\\\\source\\\\repos\\\\BookMyMovie_Reactjs\\\\BookMyMovie_Reactjs\\\\ClientApp\\\\src\\\\Components\\\\Admin\\\\AdminCategory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { Button, ButtonToolbar } from 'react-bootstrap';\nimport AddDepModal from '../../Models/AddCatModal';\nimport EditCatModal from '../../Models/EditCatModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nexport default function Category() {\n  _s();\n\n  const [cats, setCats] = useState([]);\n  const [addModalShow, setAddModalShow] = useState(false);\n  const [editModalShow, setEditModalShow] = useState(false);\n  const [editModalData, setEditModalData] = useState({\n    catid: '',\n    catname: '',\n    category: '',\n    rating: 0,\n    releasedate: null,\n    summary: ''\n  });\n  const {\n    catid,\n    catname\n  } = editModalData;\n\n  const refreshList = () => {\n    fetch(process.env.REACT_APP_API + 'categories').then(response => response.json()).then(data => {\n      setCats(data);\n    });\n  };\n\n  useEffect(() => {\n    refreshList();\n  }, [cats]);\n\n  const deleteCat = catid => {\n    if (window.confirm('Are you sure?')) {\n      fetch(process.env.REACT_APP_API + 'categories/' + catid, {\n        method: 'DELETE',\n        header: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n  };\n\n  const addModalClose = () => setAddModalShow(false);\n\n  const editModalClose = () => setEditModalShow(false);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        className: \"mt-4\",\n        stripped: \"true\",\n        bordered: true,\n        hover: true,\n        size: \"sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Category Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: cats.map(cat => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: cat.CategoryId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: cat.CategoryName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(ButtonToolbar, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  className: \"mr-2\",\n                  variant: \"info\",\n                  onClick: () => {\n                    setEditModalShow(true);\n                    setEditModalData({\n                      catid: cat.CategoryId,\n                      catname: cat.CategoryName\n                    });\n                  },\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"mr-2\",\n                  variant: \"danger\",\n                  onClick: () => deleteCat(cat.CategoryId),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(EditCatModal, {\n                  show: editModalShow,\n                  onHide: editModalClose,\n                  catid: catid,\n                  catname: catname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this), ' ']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, cat.CategoryId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonToolbar, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => setAddModalShow(true),\n          children: \"Add Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddDepModal, {\n          show: addModalShow,\n          onHide: addModalClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Category, \"s9cggkroVcpLqX8/ZKPJut75dtU=\");\n\n_c = Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["C:/Users/Riz/source/repos/BookMyMovie_Reactjs/BookMyMovie_Reactjs/ClientApp/src/Components/Admin/AdminCategory.js"],"names":["React","useState","useEffect","Table","Button","ButtonToolbar","AddDepModal","EditCatModal","require","config","Category","cats","setCats","addModalShow","setAddModalShow","editModalShow","setEditModalShow","editModalData","setEditModalData","catid","catname","category","rating","releasedate","summary","refreshList","fetch","process","env","REACT_APP_API","then","response","json","data","deleteCat","window","confirm","method","header","Accept","addModalClose","editModalClose","map","cat","CategoryId","CategoryName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddDepModal from '../../Models/AddCatModal';\r\nimport EditCatModal from '../../Models/EditCatModal';\r\nrequire('dotenv').config();\r\n\r\nexport default function Category() {\r\n  const [cats, setCats] = useState([]);\r\n  const [addModalShow, setAddModalShow] = useState(false);\r\n  const [editModalShow, setEditModalShow] = useState(false);\r\n  const [editModalData, setEditModalData] = useState({\r\n    catid: '',\r\n    catname: '',\r\n    category: '',\r\n    rating: 0,\r\n    releasedate: null,\r\n    summary: '',\r\n  });\r\n  const { catid, catname } = editModalData;\r\n  const refreshList = () => {\r\n    fetch(process.env.REACT_APP_API + 'categories')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setCats(data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshList();\r\n  }, [cats]);\r\n\r\n  const deleteCat = catid => {\r\n    if (window.confirm('Are you sure?')) {\r\n      fetch(process.env.REACT_APP_API + 'categories/' + catid, {\r\n        method: 'DELETE',\r\n        header: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const addModalClose = () => setAddModalShow(false);\r\n  const editModalClose = () => setEditModalShow(false);\r\n  return (\r\n    <>\r\n      <div>\r\n        <Table className='mt-4' stripped='true' bordered hover size='sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>Category Id</th>\r\n              <th>Category Name</th>\r\n              <th>Options</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {cats.map(cat => (\r\n              <tr key={cat.CategoryId}>\r\n                <td>{cat.CategoryId}</td>\r\n                <td>{cat.CategoryName}</td>\r\n                <td>\r\n                  <ButtonToolbar>\r\n                    <Button\r\n                      className='mr-2'\r\n                      variant='info'\r\n                      onClick={() => {\r\n                        setEditModalShow(true);\r\n                        setEditModalData({\r\n                          catid: cat.CategoryId,\r\n                          catname: cat.CategoryName,\r\n                        });\r\n                      }}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                    <Button\r\n                      className='mr-2'\r\n                      variant='danger'\r\n                      onClick={() => deleteCat(cat.CategoryId)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                    <EditCatModal\r\n                      show={editModalShow}\r\n                      onHide={editModalClose}\r\n                      catid={catid}\r\n                      catname={catname}\r\n                    />\r\n                  </ButtonToolbar>{' '}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        <ButtonToolbar>\r\n          <Button variant='primary' onClick={() => setAddModalShow(true)}>\r\n            Add Department\r\n          </Button>\r\n          <AddDepModal show={addModalShow} onHide={addModalClose}></AddDepModal>\r\n        </ButtonToolbar>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}