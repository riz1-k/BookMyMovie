{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Riz\\\\source\\\\repos\\\\BookMyMovie_Reactjs\\\\BookMyMovie_Reactjs\\\\ClientApp\\\\src\\\\Components\\\\Movie.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport { Button, ButtonToolbar } from 'react-bootstrap';\nimport AddMovModal from '../Models/AddMovModal';\nimport EditMovModal from '../Models/EditMovModal';\n\nrequire('dotenv').config();\n\nexport default function Movie() {\n  const [movs, setMovs] = useState([]);\n  const [addModalShow, setAddModalShow] = useState(false);\n  const [editModalShow, setEditModalShow] = useState(false);\n  const [editModalData, setEditModalData] = useState({\n    movid: '',\n    movname: '',\n    category: '',\n    rating: 0,\n    releasedate: null,\n    posterFileName: '',\n    summary: ''\n  });\n  const {\n    movid,\n    category,\n    movname,\n    rating,\n    releasedate,\n    posterFileName,\n    summary\n  } = editModalData;\n\n  const refreshList = () => {\n    fetch(process.env.REACT_APP_API + 'movies').then(response => response.json()).then(data => {\n      setMovs(data);\n    });\n  };\n\n  useEffect(() => {\n    refreshList();\n  }, [movs]);\n\n  const deleteMov = movid => {\n    if (window.confirm('Are you sure?')) {\n      fetch(process.env.REACT_APP_API + 'movies/' + movid, {\n        method: 'DELETE',\n        header: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n  };\n\n  const addModalClose = () => setAddModalShow(false);\n\n  const editModalClose = () => setEditModalShow(false);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"mt-4\",\n    stripped: \"true\",\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }, \"Poster\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Movie Id\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"Movie Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"Rating\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Release Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"PosterName\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Summary\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"Options\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, movs.map(mov => /*#__PURE__*/React.createElement(\"tr\", {\n    key: mov.MovieId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: mov.posterFileName,\n    alt: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, mov.MovieId), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, mov.MovieName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, mov.Category), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, mov.Rating), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, moment(mov.ReleaseDate).format('ll')), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, mov.posterFileName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, mov.Summary), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ButtonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-2\",\n    variant: \"info\",\n    onClick: () => {\n      setEditModalShow(true);\n      setEditModalData({\n        movid: mov.MovieId,\n        movname: mov.MovieName,\n        category: mov.category,\n        rating: mov.rating,\n        releasedate: mov.releasedate,\n        posterFileName: mov.posterFileName,\n        summary: mov.summary\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-5\",\n    variant: \"danger\",\n    onClick: () => deleteMov(mov.MovieId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(EditMovModal, {\n    show: editModalShow,\n    onHide: editModalClose,\n    movid: movid,\n    movname: movname,\n    category: category,\n    rating: rating,\n    releasedate: releasedate,\n    posterFileName: posterFileName,\n    summary: summary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  })), ' '))))), /*#__PURE__*/React.createElement(ButtonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: () => setAddModalShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"Add Movie\"), /*#__PURE__*/React.createElement(AddMovModal, {\n    show: addModalShow,\n    onHide: addModalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/Riz/source/repos/BookMyMovie_Reactjs/BookMyMovie_Reactjs/ClientApp/src/Components/Movie.js"],"names":["React","useEffect","useState","Table","moment","Button","ButtonToolbar","AddMovModal","EditMovModal","require","config","Movie","movs","setMovs","addModalShow","setAddModalShow","editModalShow","setEditModalShow","editModalData","setEditModalData","movid","movname","category","rating","releasedate","posterFileName","summary","refreshList","fetch","process","env","REACT_APP_API","then","response","json","data","deleteMov","window","confirm","method","header","Accept","addModalClose","editModalClose","map","mov","MovieId","MovieName","Category","Rating","ReleaseDate","format","Summary"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddMovModal from '../Models/AddMovModal';\r\nimport EditMovModal from '../Models/EditMovModal';\r\nrequire('dotenv').config();\r\n\r\nexport default function Movie() {\r\n  const [movs, setMovs] = useState([]);\r\n  const [addModalShow, setAddModalShow] = useState(false);\r\n  const [editModalShow, setEditModalShow] = useState(false);\r\n  const [editModalData, setEditModalData] = useState({\r\n    movid: '',\r\n    movname: '',\r\n    category: '',\r\n    rating: 0,\r\n    releasedate: null,\r\n    posterFileName: '',\r\n    summary: '',\r\n  });\r\n  const {\r\n    movid,\r\n    category,\r\n    movname,\r\n    rating,\r\n    releasedate,\r\n    posterFileName,\r\n    summary,\r\n  } = editModalData;\r\n  const refreshList = () => {\r\n    fetch(process.env.REACT_APP_API + 'movies')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setMovs(data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshList();\r\n  }, [movs]);\r\n\r\n  const deleteMov = movid => {\r\n    if (window.confirm('Are you sure?')) {\r\n      fetch(process.env.REACT_APP_API + 'movies/' + movid, {\r\n        method: 'DELETE',\r\n        header: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const addModalClose = () => setAddModalShow(false);\r\n  const editModalClose = () => setEditModalShow(false);\r\n  return (\r\n    <>\r\n      <div>\r\n        <Table className='mt-4' stripped='true' bordered hover size='sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>Poster</th>\r\n              <th>Movie Id</th>\r\n              <th>Movie Name</th>\r\n              <th>Category</th>\r\n              <th>Rating</th>\r\n              <th>Release Date</th>\r\n              <th>PosterName</th>\r\n              <th>Summary</th>\r\n              <th>Options</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {movs.map(mov => (\r\n              <tr key={mov.MovieId}>\r\n                <img src={mov.posterFileName} alt='img' />\r\n                <td>{mov.MovieId}</td>\r\n                <td>{mov.MovieName}</td>\r\n                <td>{mov.Category}</td>\r\n                <td>{mov.Rating}</td>\r\n                <td>{moment(mov.ReleaseDate).format('ll')}</td>\r\n                <td>{mov.posterFileName}</td>\r\n                <td>{mov.Summary}</td>\r\n                <td>\r\n                  <ButtonToolbar>\r\n                    <Button\r\n                      className='mr-2'\r\n                      variant='info'\r\n                      onClick={() => {\r\n                        setEditModalShow(true);\r\n                        setEditModalData({\r\n                          movid: mov.MovieId,\r\n                          movname: mov.MovieName,\r\n                          category: mov.category,\r\n                          rating: mov.rating,\r\n                          releasedate: mov.releasedate,\r\n                          posterFileName: mov.posterFileName,\r\n                          summary: mov.summary,\r\n                        });\r\n                      }}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                    <Button\r\n                      className='mr-5'\r\n                      variant='danger'\r\n                      onClick={() => deleteMov(mov.MovieId)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                    <EditMovModal\r\n                      show={editModalShow}\r\n                      onHide={editModalClose}\r\n                      movid={movid}\r\n                      movname={movname}\r\n                      category={category}\r\n                      rating={rating}\r\n                      releasedate={releasedate}\r\n                      posterFileName={posterFileName}\r\n                      summary={summary}\r\n                    />\r\n                  </ButtonToolbar>{' '}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        <ButtonToolbar>\r\n          <Button variant='primary' onClick={() => setAddModalShow(true)}>\r\n            Add Movie\r\n          </Button>\r\n          <AddMovModal show={addModalShow} onHide={addModalClose}></AddMovModal>\r\n        </ButtonToolbar>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}