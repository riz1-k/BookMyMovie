{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Riz\\\\source\\\\repos\\\\BookMyMovie_Reactjs\\\\BookMyMovie_Reactjs\\\\ClientApp\\\\src\\\\Models\\\\AddMovModal.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Form, Image } from 'react-bootstrap';\nexport default function AddMovModal(props) {\n  const [cats, setCats] = useState([]);\n  const [photofilename, setPhotofilename] = useState('anonymous.png');\n  useEffect(() => {\n    fetch(process.env.REACT_APP_API + 'categories').then(response => response.json()).then(data => {\n      setCats(data);\n    });\n  }, []);\n  const imagesrc = process.env.REACT_APP_PHOTOPATH + photofilename;\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(process.env.REACT_APP_API + 'movies', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        MovieName: event.target.MovieName.value,\n        Category: event.target.Category.value,\n        PosterFileName: photofilename,\n        Rating: event.target.Rating.value,\n        ReleaseDate: event.target.ReleaseDate.value,\n        Summary: event.target.Summary.value\n      })\n    }).then(res => res.json()).then(result => {\n      alert(result);\n    }, error => {\n      alert('Failed');\n    });\n  };\n\n  const handleFileSelected = event => {\n    event.preventDefault();\n    setPhotofilename(event.target.files[0].name);\n    const formData = new FormData();\n    formData.append('myFile', event.target.files[0], event.target.files[0].name);\n    fetch(process.env.REACT_APP_API + 'Movies/SaveFile', {\n      method: 'POST',\n      body: formData\n    }).then(res => res.json()).then(result => {}, error => {\n      alert('Failed');\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Header, {\n    clooseButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"Add Movie\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"MovieName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 37\n    }\n  }, \"Movie Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"MovieName\",\n    required: true,\n    placeholder: \"Movie Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"Category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 37\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 37\n    }\n  }, cats.map(cat => /*#__PURE__*/React.createElement(\"option\", {\n    key: cat.CategoryId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 45\n    }\n  }, cat.CategoryName)))), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"Rating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 37\n    }\n  }, \"Rating\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    name: \"Rating\",\n    required: true,\n    placeholder: \"Rating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"ReleaseDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 37\n    }\n  }, \"Release Date\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"date\",\n    name: \"DateOfJoining\",\n    required: true,\n    placeholder: \"DateOfJoining\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"Summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 37\n    }\n  }, \"Summary\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"Summary\",\n    required: true,\n    placeholder: \"Summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 37\n    }\n  }, \"Add Movie\")))), /*#__PURE__*/React.createElement(Col, {\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    width: \"200px\",\n    height: \"200px\",\n    src: imagesrc,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleFileSelected,\n    type: \"File\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    onClick: props.onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, \"Close\"))));\n}","map":{"version":3,"sources":["C:/Users/Riz/source/repos/BookMyMovie_Reactjs/BookMyMovie_Reactjs/ClientApp/src/Models/AddMovModal.js"],"names":["React","useEffect","useState","Modal","Button","Row","Col","Form","Image","AddMovModal","props","cats","setCats","photofilename","setPhotofilename","fetch","process","env","REACT_APP_API","then","response","json","data","imagesrc","REACT_APP_PHOTOPATH","handleSubmit","event","preventDefault","method","headers","Accept","body","JSON","stringify","MovieName","target","value","Category","PosterFileName","Rating","ReleaseDate","Summary","res","result","alert","error","handleFileSelected","files","name","formData","FormData","append","map","cat","CategoryId","CategoryName","onHide"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Modal, Button, Row, Col, Form, Image } from 'react-bootstrap';\r\n\r\nexport default function AddMovModal(props) {\r\n    const [cats, setCats] = useState([]);\r\n    const [photofilename, setPhotofilename] = useState('anonymous.png');\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API + 'categories')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setCats(data);\r\n            });\r\n    }, []);\r\n\r\n    const imagesrc = process.env.REACT_APP_PHOTOPATH + photofilename;\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        fetch(process.env.REACT_APP_API + 'movies', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                MovieName: event.target.MovieName.value,\r\n                Category: event.target.Category.value,\r\n                PosterFileName: photofilename,\r\n                Rating: event.target.Rating.value,\r\n                ReleaseDate: event.target.ReleaseDate.value,\r\n                Summary: event.target.Summary.value,\r\n            }),\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                result => {\r\n                    alert(result);\r\n                },\r\n                error => {\r\n                    alert('Failed');\r\n                }\r\n            );\r\n    };\r\n\r\n    const handleFileSelected = event => {\r\n        event.preventDefault();\r\n        setPhotofilename(event.target.files[0].name);\r\n        const formData = new FormData();\r\n        formData.append(\r\n            'myFile',\r\n            event.target.files[0],\r\n            event.target.files[0].name\r\n        );\r\n\r\n        fetch(process.env.REACT_APP_API + 'Movies/SaveFile', {\r\n            method: 'POST',\r\n            body: formData,\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                result => { },\r\n                error => {\r\n                    alert('Failed');\r\n                }\r\n            );\r\n    };\r\n    return (\r\n        <div className='container'>\r\n            <Modal\r\n                {...props}\r\n                size='lg'\r\n                aria-labelledby='contained-modal-title-vcenter'\r\n                centered\r\n            >\r\n                <Modal.Header clooseButton>\r\n                    <Modal.Title id='contained-modal-title-vcenter'>\r\n                        Add Movie\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row>\r\n                        <Col sm={6}>\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group controlId='MovieName'>\r\n                                    <Form.Label>Movie Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        name='MovieName'\r\n                                        required\r\n                                        placeholder='Movie Name'\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Category'>\r\n                                    <Form.Label>Category</Form.Label>\r\n                                    <Form.Control as='select'>\r\n                                        {cats.map(cat => (\r\n                                            <option key={cat.CategoryId}>{cat.CategoryName}</option>\r\n                                        ))}\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Rating'>\r\n                                    <Form.Label>Rating</Form.Label>\r\n                                    <Form.Control\r\n                                        type='number'\r\n                                        name='Rating'\r\n                                        required\r\n                                        placeholder='Rating'\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId='ReleaseDate'>\r\n                                    <Form.Label>Release Date</Form.Label>\r\n                                    <Form.Control\r\n                                        type='date'\r\n                                        name='DateOfJoining'\r\n                                        required\r\n                                        placeholder='DateOfJoining'\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Summary'>\r\n                                    <Form.Label>Summary</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        name='Summary'\r\n                                        required\r\n                                        placeholder='Summary'\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group>\r\n                                    <Button variant='primary' type='submit'>\r\n                                        Add Movie\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n\r\n                        <Col sm={6}>\r\n                            <Image width='200px' height='200px' src={imagesrc} />\r\n                            <input onChange={handleFileSelected} type='File' />\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant='danger' onClick={props.onHide}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}