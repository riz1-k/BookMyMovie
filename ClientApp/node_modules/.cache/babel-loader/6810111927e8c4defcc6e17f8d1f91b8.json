{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Riz\\\\source\\\\repos\\\\BookMyMovie_Reactjs\\\\BookMyMovie_Reactjs\\\\ClientApp\\\\src\\\\Models\\\\EditMovModal.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Form, Image } from 'react-bootstrap';\nexport default function EditMovModal(props) {\n  const [cats, setCats] = useState([]);\n  const [photofilename, setPhotofilename] = useState('anonymous.png');\n  const {\n    movid,\n    movname,\n    category,\n    rating,\n    releasedate,\n    summary,\n    onHide\n  } = props;\n  useEffect(() => {\n    fetch(process.env.REACT_APP_API + 'categories').then(response => response.json()).then(data => {\n      setCats(data);\n    });\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(process.env.REACT_APP_API + 'movies', {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        MovieId: event.target.MovieId.value,\n        MovieName: event.target.MovieName.value,\n        Category: event.target.Category.value,\n        PosterFileName: photofilename,\n        Rating: event.target.Rating.value,\n        ReleaseDate: event.target.ReleaseDate.value,\n        Summary: event.target.Summary.value\n      })\n    }).then(res => res.json()).then(result => {\n      alert(result);\n    }, error => {\n      alert('Failed');\n    });\n  };\n\n  const handleFileSelected = event => {\n    event.preventDefault();\n    setPhotofilename(event.target.files[0].name);\n    const formData = new FormData();\n    formData.append('myFile', event.target.files[0], event.target.files[0].name);\n    fetch(process.env.REACT_APP_API + 'Movies/SaveFile', {\n      method: 'POST',\n      body: formData\n    }).then(res => res.json()).then(result => {}, error => {\n      alert('Failed');\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, Object.assign({}, props, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Header, {\n    clooseButton: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"contained-modal-title-vcenter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Edit Movie\")), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"MovieId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }\n  }, \"Movie Id\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"MovieId\",\n    required: true,\n    disabled: true,\n    defaultValue: movid,\n    placeholder: \"Movie Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"MovieName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 37\n    }\n  }, \"Movie Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"MovieName\",\n    required: true,\n    placeholder: \"Movie Name\",\n    defaultValue: movname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"Category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 37\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    defaultValue: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 37\n    }\n  }, cats.map(cat => /*#__PURE__*/React.createElement(\"option\", {\n    key: cat.CategoryId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 45\n    }\n  }, cat.CategoryName)))), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"Rating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 37\n    }\n  }, \"Rating\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"number\",\n    name: \"Rating\",\n    required: true,\n    placeholder: \"Rating\",\n    defaultValue: rating,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"ReleaseDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 37\n    }\n  }, \"Release Date\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"date\",\n    name: \"DateOfJoining\",\n    required: true,\n    placeholder: \"DateOfJoining\",\n    defaultValue: releasedate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"Summary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 37\n    }\n  }, \"Summary\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    name: \"Summary\",\n    required: true,\n    placeholder: \"Summary\",\n    defaultValue: summary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 37\n    }\n  }, \"Update Movie\")))), /*#__PURE__*/React.createElement(Col, {\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Image, {\n    width: \"200px\",\n    height: \"200px\",\n    src: process.env.REACT_APP_PHOTOPATH + photofilename,\n    defaultValue: photofilename,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleFileSelected,\n    type: \"File\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    onClick: onHide,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, \"Close\"))));\n}","map":{"version":3,"sources":["C:/Users/Riz/source/repos/BookMyMovie_Reactjs/BookMyMovie_Reactjs/ClientApp/src/Models/EditMovModal.js"],"names":["React","useEffect","useState","Modal","Button","Row","Col","Form","Image","EditMovModal","props","cats","setCats","photofilename","setPhotofilename","movid","movname","category","rating","releasedate","summary","onHide","fetch","process","env","REACT_APP_API","then","response","json","data","handleSubmit","event","preventDefault","method","headers","Accept","body","JSON","stringify","MovieId","target","value","MovieName","Category","PosterFileName","Rating","ReleaseDate","Summary","res","result","alert","error","handleFileSelected","files","name","formData","FormData","append","map","cat","CategoryId","CategoryName","REACT_APP_PHOTOPATH"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Modal, Button, Row, Col, Form, Image } from 'react-bootstrap';\r\n\r\nexport default function EditMovModal(props) {\r\n    const [cats, setCats] = useState([]);\r\n    const [photofilename, setPhotofilename] = useState('anonymous.png');\r\n    const { movid, movname, category, rating, releasedate, summary, onHide } =\r\n        props;\r\n\r\n    useEffect(() => {\r\n        fetch(process.env.REACT_APP_API + 'categories')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setCats(data);\r\n            });\r\n    }, []);\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        fetch(process.env.REACT_APP_API + 'movies', {\r\n            method: 'PUT',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                MovieId: event.target.MovieId.value,\r\n                MovieName: event.target.MovieName.value,\r\n                Category: event.target.Category.value,\r\n                PosterFileName: photofilename,\r\n                Rating: event.target.Rating.value,\r\n                ReleaseDate: event.target.ReleaseDate.value,\r\n                Summary: event.target.Summary.value,\r\n            }),\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                result => {\r\n                    alert(result);\r\n                },\r\n                error => {\r\n                    alert('Failed');\r\n                }\r\n            );\r\n    };\r\n    const handleFileSelected = event => {\r\n        event.preventDefault();\r\n        setPhotofilename(event.target.files[0].name);\r\n        const formData = new FormData();\r\n        formData.append(\r\n            'myFile',\r\n            event.target.files[0],\r\n            event.target.files[0].name\r\n        );\r\n\r\n        fetch(process.env.REACT_APP_API + 'Movies/SaveFile', {\r\n            method: 'POST',\r\n            body: formData,\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                result => { },\r\n                error => {\r\n                    alert('Failed');\r\n                }\r\n            );\r\n    };\r\n\r\n    return (\r\n        <div className='container'>\r\n            <Modal\r\n                {...props}\r\n                size='lg'\r\n                aria-labelledby='contained-modal-title-vcenter'\r\n                centered\r\n            >\r\n                <Modal.Header clooseButton>\r\n                    <Modal.Title id='contained-modal-title-vcenter'>\r\n                        Edit Movie\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Row>\r\n                        <Col sm={6}>\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <Form.Group controlId='MovieId'>\r\n                                    <Form.Label>Movie Id</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        name='MovieId'\r\n                                        required\r\n                                        disabled\r\n                                        defaultValue={movid}\r\n                                        placeholder='Movie Name'\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId='MovieName'>\r\n                                    <Form.Label>Movie Name</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        name='MovieName'\r\n                                        required\r\n                                        placeholder='Movie Name'\r\n                                        defaultValue={movname}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Category'>\r\n                                    <Form.Label>Category</Form.Label>\r\n                                    <Form.Control as='select' defaultValue={category}>\r\n                                        {cats.map(cat => (\r\n                                            <option key={cat.CategoryId}>{cat.CategoryName}</option>\r\n                                        ))}\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Rating'>\r\n                                    <Form.Label>Rating</Form.Label>\r\n                                    <Form.Control\r\n                                        type='number'\r\n                                        name='Rating'\r\n                                        required\r\n                                        placeholder='Rating'\r\n                                        defaultValue={rating}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId='ReleaseDate'>\r\n                                    <Form.Label>Release Date</Form.Label>\r\n                                    <Form.Control\r\n                                        type='date'\r\n                                        name='DateOfJoining'\r\n                                        required\r\n                                        placeholder='DateOfJoining'\r\n                                        defaultValue={releasedate}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group controlId='Summary'>\r\n                                    <Form.Label>Summary</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        name='Summary'\r\n                                        required\r\n                                        placeholder='Summary'\r\n                                        defaultValue={summary}\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group>\r\n                                    <Button variant='primary' type='submit'>\r\n                                        Update Movie\r\n                                    </Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Col>\r\n\r\n                        <Col sm={6}>\r\n                            <Image\r\n                                width='200px'\r\n                                height='200px'\r\n                                src={process.env.REACT_APP_PHOTOPATH + photofilename}\r\n                                defaultValue={photofilename}\r\n                            />\r\n                            <input onChange={handleFileSelected} type='File' />\r\n                        </Col>\r\n                    </Row>\r\n                </Modal.Body>\r\n\r\n                <Modal.Footer>\r\n                    <Button variant='danger' onClick={onHide}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}