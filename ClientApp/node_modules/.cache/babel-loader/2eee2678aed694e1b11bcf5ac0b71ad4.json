{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Riz\\\\source\\\\repos\\\\BookMyMovie_Reactjs\\\\BookMyMovie_Reactjs\\\\ClientApp\\\\src\\\\Models\\\\EditMovModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Form, Image } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditMovModal(props) {\n  _s();\n\n  const [cats, setCats] = useState([]);\n  const [cinemas, setcinemas] = useState([]);\n  const {\n    movid,\n    movname,\n    category,\n    rating,\n    showdate,\n    cinema,\n    showtiming,\n    summary,\n    posterfilename,\n    price,\n    onHide\n  } = props;\n  const [photofilename, setPhotofilename] = useState(posterfilename);\n  useEffect(() => {\n    fetch(process.env.REACT_APP_API + 'categories').then(response => response.json()).then(data => {\n      setCats(data);\n    });\n    fetch(process.env.REACT_APP_API + 'cinemas').then(response => response.json()).then(data => {\n      setcinemas(data);\n    });\n  }, []);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetch(process.env.REACT_APP_API + 'movies', {\n      method: 'PUT',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        MovieId: event.target.MovieId.value,\n        MovieName: event.target.MovieName.value,\n        Category: event.target.Category.value,\n        Cinema: event.target.Cinema.value,\n        ShowDate: event.target.ShowDate.value,\n        ShowTiming: event.target.ShowTiming.value,\n        PosterFileName: photofilename,\n        Rating: event.target.Rating.value,\n        Summary: event.target.Summary.value,\n        Price: event.target.Price.value\n      })\n    }).then(res => res.json()).then(result => {\n      alert(result);\n    }, error => {\n      alert('Failed');\n    });\n  };\n\n  const handleFileSelected = event => {\n    event.preventDefault();\n    setPhotofilename(event.target.files[0].name);\n    const formData = new FormData();\n    formData.append('myFile', event.target.files[0], event.target.files[0].name);\n    fetch(process.env.REACT_APP_API + 'Movies/SaveFile', {\n      method: 'POST',\n      body: formData\n    }).then(res => res.json()).then(result => {}, error => {\n      alert('Failed');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Modal, { ...props,\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"Edit Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"MovieId\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Movie Id\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"MovieId\",\n                  required: true,\n                  disabled: true,\n                  defaultValue: movid,\n                  placeholder: \"Movie Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"MovieName\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Movie Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"MovieName\",\n                  required: true,\n                  placeholder: \"Movie Name\",\n                  defaultValue: movname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"Category\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  defaultValue: category,\n                  children: cats.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: cat.CategoryName\n                  }, cat.CategoryId, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"Cinema\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Cinema\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  defaultValue: cinema,\n                  as: \"select\",\n                  children: cinemas.map(cin => /*#__PURE__*/_jsxDEV(\"option\", {\n                    children: [cin.CinemaName, \",\", cin.CinemaAddress]\n                  }, cin.CinemaId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"ShowDate\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"ShowDate\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"date\",\n                  name: \"ShowDate\",\n                  required: true,\n                  defaultValue: showdate,\n                  placeholder: \"Day of the show\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"ShowTiming\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Show Timing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"time\",\n                  name: \"ShowTiming\",\n                  defaultValue: showtiming,\n                  required: true,\n                  placeholder: \"Show Timing\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"Rating\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  name: \"Rating\",\n                  min: \"1\",\n                  max: \"10\",\n                  required: true,\n                  defaultValue: rating,\n                  placeholder: \"Rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"Summary\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Summary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"text\",\n                  name: \"Summary\",\n                  required: true,\n                  placeholder: \"Summary\",\n                  defaultValue: summary\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"Price\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  name: \"Price\",\n                  required: true,\n                  placeholder: \"Price\",\n                  min: \"50\",\n                  step: \"20\",\n                  defaultValue: price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  type: \"submit\",\n                  children: \"Update Movie\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(Image, {\n              width: \"200px\",\n              height: \"200px\",\n              src: process.env.REACT_APP_PHOTOPATH + photofilename,\n              defaultValue: photofilename\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: handleFileSelected,\n              type: \"File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: onHide,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditMovModal, \"lCHkV7p+jF88F2yz/PfP7qgrrBc=\");\n\n_c = EditMovModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditMovModal\");","map":{"version":3,"sources":["C:/Users/Riz/source/repos/BookMyMovie_Reactjs/BookMyMovie_Reactjs/ClientApp/src/Models/EditMovModal.js"],"names":["React","useEffect","useState","Modal","Button","Row","Col","Form","Image","EditMovModal","props","cats","setCats","cinemas","setcinemas","movid","movname","category","rating","showdate","cinema","showtiming","summary","posterfilename","price","onHide","photofilename","setPhotofilename","fetch","process","env","REACT_APP_API","then","response","json","data","handleSubmit","event","preventDefault","method","headers","Accept","body","JSON","stringify","MovieId","target","value","MovieName","Category","Cinema","ShowDate","ShowTiming","PosterFileName","Rating","Summary","Price","res","result","alert","error","handleFileSelected","files","name","formData","FormData","append","map","cat","CategoryName","CategoryId","cin","CinemaName","CinemaAddress","CinemaId","REACT_APP_PHOTOPATH"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Modal, Button, Row, Col, Form, Image } from 'react-bootstrap';\r\n\r\nexport default function EditMovModal(props) {\r\n  const [cats, setCats] = useState([]);\r\n  const [cinemas, setcinemas] = useState([]);\r\n\r\n  const {\r\n    movid,\r\n    movname,\r\n    category,\r\n    rating,\r\n    showdate,\r\n    cinema,\r\n    showtiming,\r\n    summary,\r\n    posterfilename,\r\n    price,\r\n    onHide,\r\n  } = props;\r\n  const [photofilename, setPhotofilename] = useState(posterfilename);\r\n\r\n  useEffect(() => {\r\n    fetch(process.env.REACT_APP_API + 'categories')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setCats(data);\r\n      });\r\n    fetch(process.env.REACT_APP_API + 'cinemas')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setcinemas(data);\r\n      });\r\n  }, []);\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    fetch(process.env.REACT_APP_API + 'movies', {\r\n      method: 'PUT',\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        MovieId: event.target.MovieId.value,\r\n        MovieName: event.target.MovieName.value,\r\n        Category: event.target.Category.value,\r\n        Cinema: event.target.Cinema.value,\r\n        ShowDate: event.target.ShowDate.value,\r\n        ShowTiming: event.target.ShowTiming.value,\r\n        PosterFileName: photofilename,\r\n        Rating: event.target.Rating.value,\r\n        Summary: event.target.Summary.value,\r\n        Price: event.target.Price.value,\r\n      }),\r\n    })\r\n      .then(res => res.json())\r\n      .then(\r\n        result => {\r\n          alert(result);\r\n        },\r\n        error => {\r\n          alert('Failed');\r\n        }\r\n      );\r\n  };\r\n  const handleFileSelected = event => {\r\n    event.preventDefault();\r\n    setPhotofilename(event.target.files[0].name);\r\n    const formData = new FormData();\r\n    formData.append(\r\n      'myFile',\r\n      event.target.files[0],\r\n      event.target.files[0].name\r\n    );\r\n\r\n    fetch(process.env.REACT_APP_API + 'Movies/SaveFile', {\r\n      method: 'POST',\r\n      body: formData,\r\n    })\r\n      .then(res => res.json())\r\n      .then(\r\n        result => {},\r\n        error => {\r\n          alert('Failed');\r\n        }\r\n      );\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <Modal\r\n        {...props}\r\n        size='lg'\r\n        aria-labelledby='contained-modal-title-vcenter'\r\n        centered\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title id='contained-modal-title-vcenter'>\r\n            Edit Movie\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Row>\r\n            <Col sm={6}>\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group controlId='MovieId'>\r\n                  <Form.Label>Movie Id</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    name='MovieId'\r\n                    required\r\n                    disabled\r\n                    defaultValue={movid}\r\n                    placeholder='Movie Name'\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId='MovieName'>\r\n                  <Form.Label>Movie Name</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    name='MovieName'\r\n                    required\r\n                    placeholder='Movie Name'\r\n                    defaultValue={movname}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId='Category'>\r\n                  <Form.Label>Category</Form.Label>\r\n                  <Form.Control as='select' defaultValue={category}>\r\n                    {cats.map(cat => (\r\n                      <option key={cat.CategoryId}>{cat.CategoryName}</option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='Cinema'>\r\n                  <Form.Label>Cinema</Form.Label>\r\n                  <Form.Control defaultValue={cinema} as='select'>\r\n                    {cinemas.map(cin => (\r\n                      <option key={cin.CinemaId}>\r\n                        {cin.CinemaName},{cin.CinemaAddress}\r\n                      </option>\r\n                    ))}\r\n                  </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='ShowDate'>\r\n                  <Form.Label>ShowDate</Form.Label>\r\n                  <Form.Control\r\n                    type='date'\r\n                    name='ShowDate'\r\n                    required\r\n                    defaultValue={showdate}\r\n                    placeholder='Day of the show'\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId='ShowTiming'>\r\n                  <Form.Label>Show Timing</Form.Label>\r\n                  <Form.Control\r\n                    type='time'\r\n                    name='ShowTiming'\r\n                    defaultValue={showtiming}\r\n                    required\r\n                    placeholder='Show Timing'\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId='Rating'>\r\n                  <Form.Label>Rating</Form.Label>\r\n                  <Form.Control\r\n                    type='number'\r\n                    name='Rating'\r\n                    min='1'\r\n                    max='10'\r\n                    required\r\n                    defaultValue={rating}\r\n                    placeholder='Rating'\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId='Summary'>\r\n                  <Form.Label>Summary</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    name='Summary'\r\n                    required\r\n                    placeholder='Summary'\r\n                    defaultValue={summary}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='Price'>\r\n                  <Form.Label>Price</Form.Label>\r\n                  <Form.Control\r\n                    type='number'\r\n                    name='Price'\r\n                    required\r\n                    placeholder='Price'\r\n                    min='50'\r\n                    step='20'\r\n                    defaultValue={price}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                  <Button variant='primary' type='submit'>\r\n                    Update Movie\r\n                  </Button>\r\n                </Form.Group>\r\n              </Form>\r\n            </Col>\r\n\r\n            <Col sm={6}>\r\n              <Image\r\n                width='200px'\r\n                height='200px'\r\n                src={process.env.REACT_APP_PHOTOPATH + photofilename}\r\n                defaultValue={photofilename}\r\n              />\r\n              <input onChange={handleFileSelected} type='File' />\r\n            </Col>\r\n          </Row>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant='danger' onClick={onHide}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}