{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Riz\\\\source\\\\repos\\\\BookMyMovie_Reactjs\\\\BookMyMovie_Reactjs\\\\ClientApp\\\\src\\\\Components\\\\Admin\\\\AdminMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport { Button, ButtonToolbar } from 'react-bootstrap';\nimport AddMovModal from '../../Models/AddMovModal';\nimport EditMovModal from '../../Models/EditMovModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nexport default function Movie() {\n  _s();\n\n  const [movs, setMovs] = useState([]);\n  const [addModalShow, setAddModalShow] = useState(false);\n  const [editModalShow, setEditModalShow] = useState(false);\n  const [editModalData, setEditModalData] = useState({\n    movid: '',\n    movname: '',\n    category: '',\n    rating: 0,\n    releasedate: null,\n    posterFileName: '',\n    summary: ''\n  });\n  const {\n    movid,\n    category,\n    movname,\n    rating,\n    releasedate,\n    posterFileName,\n    summary\n  } = editModalData;\n\n  const refreshList = () => {\n    fetch(process.env.REACT_APP_API + 'movies').then(response => response.json()).then(data => {\n      setMovs(data);\n    });\n  };\n\n  useEffect(() => {\n    refreshList();\n  }, [movs]);\n\n  const posterImg = filename => {\n    return process.env.REACT_APP_PHOTOPATH + filename;\n  };\n\n  const deleteMov = movid => {\n    if (window.confirm('Are you sure?')) {\n      fetch(process.env.REACT_APP_API + 'movies/' + movid, {\n        method: 'DELETE',\n        header: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n  };\n\n  const addModalClose = () => setAddModalShow(false);\n\n  const editModalClose = () => setEditModalShow(false);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"container mx-auto p-6 font-mono\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"w-full mb-8 overflow-hidden rounded-lg shadow-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"w-full overflow-x-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            class: \"w-full\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                class: \"text-md font-semibold tracking-wide text-left text-gray-900 bg-gray-100 uppercase border-b border-gray-600\",\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  class: \"px-4 py-3\",\n                  children: \"Movie\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  class: \"px-4 py-3\",\n                  children: \"Rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  class: \"px-4 py-3\",\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  class: \"px-4 py-3\",\n                  children: \"Release Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  class: \"px-4 py-3\",\n                  children: \"Options\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              class: \"bg-white\",\n              children: movs.map(mov => /*#__PURE__*/_jsxDEV(\"tr\", {\n                class: \"text-gray-700\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  class: \"px-4 py-3 border\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    class: \"flex items-center text-sm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      class: \"relative w-16 h-14 mr-3  md:block\",\n                      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                        class: \"object-cover w-full h-full rounded-sm\",\n                        src: posterImg(mov.PosterFileName),\n                        alt: mov.PosterFileName,\n                        loading: \"lazy\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 82,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        class: \"absolute inset-0 rounded-full shadow-inner\",\n                        \"aria-hidden\": \"true\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 88,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        class: \"font-semibold text-black\",\n                        children: mov.MovieName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 94,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  class: \"px-4 py-3 text-ms font-semibold border\",\n                  children: mov.Rating\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  class: \"px-4 py-3 text-xs border\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    class: \"px-2 py-1 font-semibold leading-tight text-green-700 bg-green-100 rounded-sm\",\n                    children: mov.Category\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  class: \"px-4 py-3 text-sm border\",\n                  children: moment(mov.ReleaseDate).format('ll')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  class: \"px-4 py-3 text-sm border\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"py-2 text-white text-sm font-poster  px-4 bg-green-500 mx-1 rounded-xl\",\n                    onClick: () => {\n                      setEditModalShow(true);\n                      setEditModalData({\n                        movid: mov.MovieId,\n                        movname: mov.MovieName,\n                        category: mov.category,\n                        rating: mov.rating,\n                        releasedate: mov.releasedate,\n                        posterFileName: mov.posterFileName,\n                        summary: mov.summary\n                      });\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"bx bxs-edit-alt text-lg\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 127,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"py-2 text-white text-sm font-poster  px-8 bg-red-500 mx-1 rounded-xl\",\n                    onClick: () => deleteMov(mov.MovieId),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(EditMovModal, {\n                    show: editModalShow,\n                    onHide: editModalClose,\n                    movid: movid,\n                    movname: movname,\n                    category: category,\n                    rating: rating,\n                    releasedate: releasedate,\n                    posterFileName: posterFileName,\n                    summary: summary\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 21\n                }, this)]\n              }, mov.MovieId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(Movie, \"CXo3118AXDPZxmkyrSMdPjaw0JY=\");\n\n_c = Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["C:/Users/Riz/source/repos/BookMyMovie_Reactjs/BookMyMovie_Reactjs/ClientApp/src/Components/Admin/AdminMovie.js"],"names":["React","useEffect","useState","Table","moment","Button","ButtonToolbar","AddMovModal","EditMovModal","require","config","Movie","movs","setMovs","addModalShow","setAddModalShow","editModalShow","setEditModalShow","editModalData","setEditModalData","movid","movname","category","rating","releasedate","posterFileName","summary","refreshList","fetch","process","env","REACT_APP_API","then","response","json","data","posterImg","filename","REACT_APP_PHOTOPATH","deleteMov","window","confirm","method","header","Accept","addModalClose","editModalClose","map","mov","PosterFileName","MovieName","Rating","Category","ReleaseDate","format","MovieId"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddMovModal from '../../Models/AddMovModal';\r\nimport EditMovModal from '../../Models/EditMovModal';\r\nrequire('dotenv').config();\r\n\r\nexport default function Movie() {\r\n  const [movs, setMovs] = useState([]);\r\n  const [addModalShow, setAddModalShow] = useState(false);\r\n  const [editModalShow, setEditModalShow] = useState(false);\r\n  const [editModalData, setEditModalData] = useState({\r\n    movid: '',\r\n    movname: '',\r\n    category: '',\r\n    rating: 0,\r\n    releasedate: null,\r\n    posterFileName: '',\r\n    summary: '',\r\n  });\r\n  const {\r\n    movid,\r\n    category,\r\n    movname,\r\n    rating,\r\n    releasedate,\r\n    posterFileName,\r\n    summary,\r\n  } = editModalData;\r\n  const refreshList = () => {\r\n    fetch(process.env.REACT_APP_API + 'movies')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        setMovs(data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    refreshList();\r\n  }, [movs]);\r\n\r\n  const posterImg = filename => {\r\n    return process.env.REACT_APP_PHOTOPATH + filename;\r\n  };\r\n\r\n  const deleteMov = movid => {\r\n    if (window.confirm('Are you sure?')) {\r\n      fetch(process.env.REACT_APP_API + 'movies/' + movid, {\r\n        method: 'DELETE',\r\n        header: {\r\n          Accept: 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const addModalClose = () => setAddModalShow(false);\r\n  const editModalClose = () => setEditModalShow(false);\r\n  return (\r\n    <>\r\n      <section class='container mx-auto p-6 font-mono'>\r\n        <div class='w-full mb-8 overflow-hidden rounded-lg shadow-lg'>\r\n          <div class='w-full overflow-x-auto'>\r\n            <table class='w-full'>\r\n              <thead>\r\n                <tr class='text-md font-semibold tracking-wide text-left text-gray-900 bg-gray-100 uppercase border-b border-gray-600'>\r\n                  <th class='px-4 py-3'>Movie</th>\r\n                  <th class='px-4 py-3'>Rating</th>\r\n                  <th class='px-4 py-3'>Category</th>\r\n                  <th class='px-4 py-3'>Release Date</th>\r\n                  <th class='px-4 py-3'>Options</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody class='bg-white'>\r\n                {movs.map(mov => (\r\n                  <tr class='text-gray-700' key={mov.MovieId}>\r\n                    <td class='px-4 py-3 border'>\r\n                      <div class='flex items-center text-sm'>\r\n                        <div class='relative w-16 h-14 mr-3  md:block'>\r\n                          <img\r\n                            class='object-cover w-full h-full rounded-sm'\r\n                            src={posterImg(mov.PosterFileName)}\r\n                            alt={mov.PosterFileName}\r\n                            loading='lazy'\r\n                          />\r\n                          <div\r\n                            class='absolute inset-0 rounded-full shadow-inner'\r\n                            aria-hidden='true'\r\n                          ></div>\r\n                        </div>\r\n                        <div>\r\n                          <p class='font-semibold text-black'>\r\n                            {mov.MovieName}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td class='px-4 py-3 text-ms font-semibold border'>\r\n                      {mov.Rating}\r\n                    </td>\r\n                    <td class='px-4 py-3 text-xs border'>\r\n                      <span class='px-2 py-1 font-semibold leading-tight text-green-700 bg-green-100 rounded-sm'>\r\n                        {mov.Category}\r\n                      </span>\r\n                    </td>\r\n                    <td class='px-4 py-3 text-sm border'>\r\n                      {moment(mov.ReleaseDate).format('ll')}\r\n                    </td>\r\n                    <td class='px-4 py-3 text-sm border'>\r\n                      <button\r\n                        className='py-2 text-white text-sm font-poster  px-4 bg-green-500 mx-1 rounded-xl'\r\n                        onClick={() => {\r\n                          setEditModalShow(true);\r\n                          setEditModalData({\r\n                            movid: mov.MovieId,\r\n                            movname: mov.MovieName,\r\n                            category: mov.category,\r\n                            rating: mov.rating,\r\n                            releasedate: mov.releasedate,\r\n                            posterFileName: mov.posterFileName,\r\n                            summary: mov.summary,\r\n                          });\r\n                        }}\r\n                      >\r\n                        <i class='bx bxs-edit-alt text-lg'></i>\r\n                      </button>\r\n                      <button\r\n                        className='py-2 text-white text-sm font-poster  px-8 bg-red-500 mx-1 rounded-xl'\r\n                        onClick={() => deleteMov(mov.MovieId)}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n\r\n                      <EditMovModal\r\n                        show={editModalShow}\r\n                        onHide={editModalClose}\r\n                        movid={movid}\r\n                        movname={movname}\r\n                        category={category}\r\n                        rating={rating}\r\n                        releasedate={releasedate}\r\n                        posterFileName={posterFileName}\r\n                        summary={summary}\r\n                      />\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {/* <div>\r\n        <table className='table-fixed'>\r\n          <thead>\r\n            <tr>\r\n              <th className='w-52 flex justify-center'>Movie Id</th>\r\n              <th className='w-24 flex justify-center'>Poster</th>\r\n              <th className='w-32 flex justify-center'>Movie Name</th>\r\n              <th className='w-28 flex justify-center'>Category</th>\r\n              <th className='w-24 flex justify-center'>Rating</th>\r\n              <th className='w-32 flex justify-center '>Release Date</th>\r\n              <th className='w-60 flex justify-center'>Options</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {movs.map(mov => (\r\n              <tr key={mov.MovieId}>\r\n                <td>\r\n                  <img\r\n                    src={posterImg(mov.PosterFileName)}\r\n                    height='200px'\r\n                    width='200px'\r\n                    alt='img'\r\n                  />\r\n                </td>\r\n                <td>{mov.MovieId}</td>\r\n                <td>{mov.MovieName}</td>\r\n                <td>{mov.Category}</td>\r\n                <td>{mov.Rating}</td>\r\n                <td className='overflow-break'>\r\n                  {moment(mov.ReleaseDate).format('ll')}\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    className='py-2 text-white text-sm font-poster  px-8 bg-green-500 mx-1 rounded-xl'\r\n                    onClick={() => {\r\n                      setEditModalShow(true);\r\n                      setEditModalData({\r\n                        movid: mov.MovieId,\r\n                        movname: mov.MovieName,\r\n                        category: mov.category,\r\n                        rating: mov.rating,\r\n                        releasedate: mov.releasedate,\r\n                        posterFileName: mov.posterFileName,\r\n                        summary: mov.summary,\r\n                      });\r\n                    }}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    className='py-2 text-white text-sm font-poster  px-8 bg-red-500 mx-1 rounded-xl'\r\n                    onClick={() => deleteMov(mov.MovieId)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n\r\n                  <EditMovModal\r\n                    show={editModalShow}\r\n                    onHide={editModalClose}\r\n                    movid={movid}\r\n                    movname={movname}\r\n                    category={category}\r\n                    rating={rating}\r\n                    releasedate={releasedate}\r\n                    posterFileName={posterFileName}\r\n                    summary={summary}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        <button\r\n          className='py-2 text-white text-sm font-poster  px-8 bg-blue-500 mx-1 rounded-xl '\r\n          onClick={() => setAddModalShow(true)}\r\n        >\r\n          Add Movie\r\n        </button>\r\n        <AddMovModal show={addModalShow} onHide={addModalClose}></AddMovModal>\r\n      </div> */}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}