{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Riz\\\\source\\\\repos\\\\BookMyMovie_Reactjs\\\\BookMyMovie_Reactjs\\\\ClientApp\\\\src\\\\Components\\\\Movie.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport moment from 'moment';\nimport { Button, ButtonToolbar } from 'react-bootstrap';\nimport AddMovModal from '../Models/AddMovModal';\nimport EditMovModal from '../Models/EditMovModal';\n\nrequire('dotenv').config();\n\nexport default function Movie() {\n  const [movs, setMovs] = useState([]);\n  const [addModalShow, setAddModalShow] = useState(false);\n  const [editModalShow, setEditModalShow] = useState(false);\n  const [editModalData, setEditModalData] = useState({\n    movid: '',\n    movname: '',\n    category: '',\n    rating: 0,\n    releasedate: null,\n    summary: ''\n  });\n  const {\n    movid,\n    category,\n    movname,\n    rating,\n    releasedate,\n    summary\n  } = editModalData;\n\n  const refreshList = () => {\n    fetch(process.env.REACT_APP_API + 'movies').then(response => response.json()).then(data => {\n      setMovs(data);\n    });\n  };\n\n  useEffect(() => {\n    refreshList();\n  }, [movs]);\n\n  const deleteMov = movid => {\n    if (window.confirm('Are you sure?')) {\n      fetch(process.env.REACT_APP_API + 'movies/' + movid, {\n        method: 'DELETE',\n        header: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        }\n      });\n    }\n  };\n\n  const addModalClose = () => setAddModalShow(false);\n\n  const editModalClose = () => setEditModalShow(false);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    className: \"mt-4\",\n    stripped: \"true\",\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 29\n    }\n  }, \"Movie Id\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  }, \"Movie Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, \"Rating\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, \"Release Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, \"Summary\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, \"Options\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }, movs.map(mov => /*#__PURE__*/React.createElement(\"tr\", {\n    key: mov.MovieId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 33\n    }\n  }, mov.MovieId), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, mov.MovieName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }, mov.Category), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, mov.Rating), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, moment(mov.ReleaseDate).format('ll')), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, mov.Summary), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ButtonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-2\",\n    variant: \"info\",\n    onClick: () => {\n      setEditModalShow(true);\n      setEditModalData({\n        movid: mov.MovieId,\n        movname: mov.MovieName,\n        category: mov.category,\n        rating: mov.rating,\n        releasedate: mov.releasedate,\n        summary: mov.summary\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 41\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"mr-5\",\n    variant: \"danger\",\n    onClick: () => deleteMov(mov.MovieId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 41\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(EditMovModal, {\n    show: editModalShow,\n    onHide: editModalClose,\n    movid: movid,\n    movname: movname,\n    category: category,\n    rating: rating,\n    releasedate: releasedate,\n    summary: summary,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 41\n    }\n  })), ' '))))), /*#__PURE__*/React.createElement(ButtonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    onClick: () => setAddModalShow(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, \"Add Movie\"), /*#__PURE__*/React.createElement(AddMovModal, {\n    show: addModalShow,\n    onHide: addModalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/Riz/source/repos/BookMyMovie_Reactjs/BookMyMovie_Reactjs/ClientApp/src/Components/Movie.js"],"names":["React","useEffect","useState","Table","moment","Button","ButtonToolbar","AddMovModal","EditMovModal","require","config","Movie","movs","setMovs","addModalShow","setAddModalShow","editModalShow","setEditModalShow","editModalData","setEditModalData","movid","movname","category","rating","releasedate","summary","refreshList","fetch","process","env","REACT_APP_API","then","response","json","data","deleteMov","window","confirm","method","header","Accept","addModalClose","editModalClose","map","mov","MovieId","MovieName","Category","Rating","ReleaseDate","format","Summary"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport moment from 'moment';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddMovModal from '../Models/AddMovModal';\r\nimport EditMovModal from '../Models/EditMovModal';\r\nrequire('dotenv').config();\r\n\r\nexport default function Movie() {\r\n    const [movs, setMovs] = useState([]);\r\n    const [addModalShow, setAddModalShow] = useState(false);\r\n    const [editModalShow, setEditModalShow] = useState(false);\r\n    const [editModalData, setEditModalData] = useState({\r\n        movid: '',\r\n        movname: '',\r\n        category: '',\r\n        rating: 0,\r\n        releasedate: null,\r\n        summary: '',\r\n    });\r\n    const { movid, category, movname, rating, releasedate, summary } =\r\n        editModalData;\r\n    const refreshList = () => {\r\n        fetch(process.env.REACT_APP_API + 'movies')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setMovs(data);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        refreshList();\r\n    }, [movs]);\r\n\r\n    const deleteMov = movid => {\r\n        if (window.confirm('Are you sure?')) {\r\n            fetch(process.env.REACT_APP_API + 'movies/' + movid, {\r\n                method: 'DELETE',\r\n                header: {\r\n                    Accept: 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n            });\r\n        }\r\n    };\r\n\r\n    const addModalClose = () => setAddModalShow(false);\r\n    const editModalClose = () => setEditModalShow(false);\r\n    return (\r\n        <>\r\n            <div>\r\n                <Table className='mt-4' stripped='true' bordered hover size='sm'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Movie Id</th>\r\n                            <th>Movie Name</th>\r\n                            <th>Category</th>\r\n                            <th>Rating</th>\r\n                            <th>Release Date</th>\r\n                            <th>Summary</th>\r\n                            <th>Options</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {movs.map(mov => (\r\n                            <tr key={mov.MovieId}>\r\n                                <td>{mov.MovieId}</td>\r\n                                <td>{mov.MovieName}</td>\r\n                                <td>{mov.Category}</td>\r\n                                <td>{mov.Rating}</td>\r\n                                <td>{moment(mov.ReleaseDate).format('ll')}</td>\r\n                                <td>{mov.Summary}</td>\r\n                                <td>\r\n                                    <ButtonToolbar>\r\n                                        <Button\r\n                                            className='mr-2'\r\n                                            variant='info'\r\n                                            onClick={() => {\r\n                                                setEditModalShow(true);\r\n                                                setEditModalData({\r\n                                                    movid: mov.MovieId,\r\n                                                    movname: mov.MovieName,\r\n                                                    category: mov.category,\r\n                                                    rating: mov.rating,\r\n                                                    releasedate: mov.releasedate,\r\n                                                    summary: mov.summary,\r\n                                                });\r\n                                            }}\r\n                                        >\r\n                                            Edit\r\n                                        </Button>\r\n                                        <Button\r\n                                            className='mr-5'\r\n                                            variant='danger'\r\n                                            onClick={() => deleteMov(mov.MovieId)}\r\n                                        >\r\n                                            Delete\r\n                                        </Button>\r\n                                        <EditMovModal\r\n                                            show={editModalShow}\r\n                                            onHide={editModalClose}\r\n                                            movid={movid}\r\n                                            movname={movname}\r\n                                            category={category}\r\n                                            rating={rating}\r\n                                            releasedate={releasedate}\r\n                                            summary={summary}\r\n                                        />\r\n                                    </ButtonToolbar>{' '}\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                <ButtonToolbar>\r\n                    <Button variant='primary' onClick={() => setAddModalShow(true)}>\r\n                        Add Movie\r\n                    </Button>\r\n                    <AddMovModal show={addModalShow} onHide={addModalClose}></AddMovModal>\r\n                </ButtonToolbar>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}